name: build
on: 
    push:
        branches: 
            - main
            - develop
    pull_request:
        types: closed
        branches:
            - main
            - develop
    schedule:
        - cron: "0 0 * * 1"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]
        include:
            - os: windows-latest
              node-version: 22
        exclude: 
            - os: ubuntu-latest
              node-version: 16
            - os: windows-latest
              node-version: 18
            - os: macos-latest
              node-version: 20
    steps:
      - name: Check code
        uses: actions/checkout@v4
      
      - name: Setup node 
        uses: actions/setup-node@v4
        with:
            node-version: ${{ matrix.node-version }}
      
      # Install dependencies
      - name: Install dependencies
        run: npm install
      
      # Build the application
      - name: Build the application
        run: npm run build
      
      - name: Create folder
        run: mkdir -p dist
      
      # Upload artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-v${{ matrix.node-version }}
          path: dist/output.txt
  
  # Download job
  download:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]
        include:
            - os: windows-latest
              node-version: 22
        exclude: 
            - os: ubuntu-latest
              node-version: 16
            - os: windows-latest
              node-version: 18
            - os: macos-latest
              node-version: 20
    steps:
        # Download artifacts
        - uses: actions/download-artifact@v4
          with:
            name: build-${{ matrix.os }}-v${{ matrix.node-version }}
        
        # Read file content
        - name: Read output
          run: cat output.txt
        
        # Deployment!
        - name: Deployment step
          run: echo "It is now time to deploy the build!" 

